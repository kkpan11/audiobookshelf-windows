name: Build Windows installer on Release of audiobookshelf

on:
  release:
    types: [published]
    repository: advplyr/audiobookshelf
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      # 0. Setup steps
      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pkg globally
        run: npm install -g pkg

      - name: Setup .NET
        uses: actions/setup-dotnet@v1

      # 1. Build the audiobookshelf executable
      - name: Get Latest Audiobookshelf Release Tag
        id: get_latest_release
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.getLatestRelease({
              owner: 'advplyr',
              repo: 'audiobookshelf',
            })
            console.log('Audiobookshelf latest release tag: ' + data.tag_name)
            return data.tag_name
          result-encoding: string
      - uses: actions/checkout@v3
        with:
          repository: advplyr/audiobookshelf
          ref: ${{ steps.get_latest_release.outputs.result }}
          path: ./audiobookshelf

      - name: Install dependencies
        run: npm ci
        working-directory: ./audiobookshelf

      - name: Build windows executable
        run: npm run build-win
        working-directory: ./audiobookshelf

      # 2. Build the tray app
      - uses: actions/checkout@v3
        with:
          path: ./audiobookshelf-windows

      - name: Build solution
        run: dotnet build -c Release
        working-directory: ./audiobookshelf-windows

      # 3. Build the installer
      - name: Compile inno setup
        run: iscc /DMyAppVersion=${{ steps.get_latest_release.outputs.result }} Setup/installer.iss
        working-directory: ./audiobookshelf-windows

      # 4. Create a release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event_name == 'release' && steps.get_latest_release.outputs.result || 'v0.0.0.1' }}
          release_name: ${{ github.event_name == 'release' && steps.get_latest_release.outputs.result || 'v0.0.0.1' }}-auto
          draft: true
          prerelease: true
      
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./audiobookshelf-windows/Setup/Output/AudiobookshelfInstaller.exe
          asset_name: AudiobookshelfInstaller.${{ steps.get_latest_release.outputs.result }}.exe
          asset_content_type: application/x-msdownload
